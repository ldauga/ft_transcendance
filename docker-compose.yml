version: '3.9'

networks:
  webapp:
    driver: bridge

volumes:
  db_data: {}
  backend_data: {}
  frontend_data: {}

services:
  db:
    build: ./database
    container_name: postgres
    volumes:
    - db_data:/var/lib/postgres
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
    - "5432:5432"
    networks:
      - webapp

  frontend:
    container_name: frontend
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    build: ./frontend
    environment:
      DB_SERVER: ${POSTGRES_DB}
    restart: always
    ports:
      - 3000:3000
    networks:
      - webapp

  backend:
    container_name: backend
    depends_on:
      - db
    build: ./backend
    volumes:
      - ./backend:/app
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: always
    ports:
      - 5001:5001
    networks:
      - webapp

  adminer:
    image: adminer:4.8.1
    container_name: adminer
    restart: always
    depends_on:
      - db
    ports:
      - 8080:8080
    networks:
      - webapp